name: Create Docker Image

on:
    push:
        branches: ['main', 'feat/testing']
        paths:
            - '.github/workflows/deploy.yml'

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Build docker image
              run: docker build -t frontend-technical:latest .

            - name: Build docker container
              run: docker run -d -p 3000:3000 frontend-technical

    deploy:
        needs: build
        runs-on: ubuntu-latest

        env:
            PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
            REGION: us-east1
            REPO_NAME: frontend-technical

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            # Authenticate with Google Cloud
            - id: 'auth'
              uses: 'google-github-actions/auth@v0'
              with:
                  credentials_json: '${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}'

            # Setup gcloud CLI/SDK
            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v0

            - name: Authorize Docker push
              run: gcloud auth configure-docker

            - name: Build and tag the docker image
              run: |-
                  docker build . --tag gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA

            - name: Push the image to the Google Container Registry (GCR)
              run: |-
                  docker push gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA

            - name: Deploy
              run: |-
                  gcloud run deploy $REPO_NAME \
                  --region $REGION \
                  --image gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
                  --platform "managed" \
                  --quiet

    # test:
    #     needs: deploy
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v2

    #         - name: Install dependencies
    #           run: npm install

    #         - name: Run Cypress tests
    #           run: npm run cypress-prod-test
